<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="friendMapper">

	<resultMap type="Friend" id="friendResultSet">
		<result column="user_no" property="userNo"/>
		<result column="user_id" property="userId"/>
		<result column="user_pwd" property="userPwd"/>
		<result column="user_name" property="userName"/>
		<result column="user_nick" property="userNick"/>
		<result column="email" property="email"/>
		<result column="profile" property="profile"/>
		<result column="gender" property="gender"/>
		<result column="social" property="social"/>
		<result column="enroll_date" property="enrollDate"/>
		<result column="token" property="token"/>
		<result column="status" property="status"/>
		<result column="block_i" property="blockI"/>
		<result column="block_me" property="blockMe"/>
	</resultMap>
	
	<!-- 친구 리스트 -->
	<select id="selectList" resultMap="friendResultSet">
		select *
		from tb_member
		    left join 
		        (
		        select nvl(a.user_add_no, nvl(b.user_no, a.user_add_no)) user_no, a.user_blocked block_i, b.user_blocked block_me
		        from (select * from tb_friend where user_no = #{userNo}) a
		        full outer join (select * from tb_friend where user_add_no = #{userNo}) b on (a.user_add_no = b.user_no)
		        )
		    using(user_no)
		where status = 'Y'
		    and (block_me != 'Y' or block_me is null)
		    and user_no != #{userNo}
		    and nvl(block_i, block_me) is not null
	</select>
	
	<!-- 친구 리스트 -->
	<select id="searchList" resultMap="friendResultSet" parameterType="hashmap">
		select *
		from tb_member
		    left join 
		        (
		        select nvl(a.user_add_no, nvl(b.user_no, a.user_add_no)) user_no, a.user_blocked block_i, b.user_blocked block_me
		        from (select * from tb_friend where user_no = #{userNo}) a
		        full outer join (select * from tb_friend where user_add_no = #{userNo}) b on (a.user_add_no = b.user_no)
		        )
		    using(user_no)
		where status = 'Y'
		    and (block_me != 'Y' or block_me is null)
		    and user_id like '%'||#{keyword}||'%'
		    and user_no != #{userNo}
	</select>
	
	<!-- 친구 추가 -->
	<insert id="addFriend" parameterType="hashmap">
		insert 
			into tb_friend
			(
				  user_no
				, user_add_no
				, user_blocked
			)
			values
			(
				  #{userNo}
				, #{addUserNo}
				, default
			)
	</insert>
	
	<!-- 친구 삭제 -->
	<delete id="delFriend" parameterType="hashmap">
		delete 
			from tb_friend
		where 
			user_no = #{userNo}
		and user_add_no = #{delUserNo}
	</delete>
	
	<!-- 미친구 차단 -->
	<insert id="banAddFriend" parameterType="hashmap">
		insert 
			into tb_friend
			(
				  user_no
				, user_add_no
				, user_blocked
			)
			values
			(
				  #{userNo}
				, #{banUserNo}
				, 'Y'
			)
	</insert>
	
	<!-- 친구 차단 -->
	<update id="banUpdateFriend" parameterType="hashmap">
		update tb_friend
		set user_blocked = 'Y'
		where 
			user_no = #{userNo}
		and user_add_no = #{banUserNo}
	</update>
	
	<!-- 차단 해제 -->
	<delete id="banDelFriend" parameterType="hashmap">
		delete 
			from tb_friend
		where 
			user_no = #{userNo}
		and user_add_no = #{banUserNo}
	</delete>
</mapper>